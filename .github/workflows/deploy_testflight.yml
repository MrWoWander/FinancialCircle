name: Deploy to TestFlight

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: macos-latest
    environment: Main

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import code sign
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_FILE }}
          p12-password: ${{ secrets.P12_PASSWORD }}
      
      - name: Download provisioning
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: ru.bpmteamsnew.financial-circle
          issuer-id: ${{ secrets.API_ISSUER_ID }}
          api-key-id: ${{ secrets.API_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_KEY }}  

      # Шаг 4: Поиск имени проекта
      - name: Find .xcodeproj File
        id: find_project
        run: |
          echo "Looking for .xcodeproj file in repository root..."
          PROJECT_FILE=$(find . -maxdepth 1 -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT_FILE" ]; then
            echo "❌ No .xcodeproj file found in the repository root!"
            exit 1
          fi
          PROJECT_NAME=$(basename "$PROJECT_FILE" .xcodeproj)
          echo "✅ Found .xcodeproj file: $PROJECT_FILE"
          echo "✅ Project Name: $PROJECT_NAME"
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "PROJECT_FILE=$PROJECT_FILE" >> $GITHUB_ENV

      # Шаг 5: Сборка приложения
      - name: Build iOS app
        run: |
          xcodebuild clean archive \
            -project "${PROJECT_FILE}" \
            -scheme "${PROJECT_NAME}" \
            -archivePath "${{ github.workspace }}/build/${PROJECT_NAME}.xcarchive" \
            -sdk iphoneos \
            -authenticationKeyID "${{ secrets.API_KEY_ID }}" \
            -authenticationKeyIssuerID "${{ secrets.API_ISSUER_ID }}" \
            DEVELOPMENT_TEAM="${{ secrets.DEVELOPMENT_TEAM_ID }}" \
            PROVISIONING_PROFILE_SPECIFIER="FC" \
            -allowProvisioningUpdates

      # Шаг 6: Экспорт архива в .ipa
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath "${{ github.workspace }}/build/${PROJECT_NAME}.xcarchive" \
            -exportPath "${{ github.workspace }}/build" \
            -exportOptionsPlist ExportOptions.plist \
            -authenticationKeyID "${{ secrets.API_KEY_ID }}" \
            -authenticationKeyIssuerID "${{ secrets.API_ISSUER_ID }}" \
            DEVELOPMENT_TEAM="${{ secrets.DEVELOPMENT_TEAM_ID }}" \
            -allowProvisioningUpdates

      # Шаг 7: Загрузка .ipa в TestFlight
      - name: Upload to TestFlight
        run: |
          AUTH_KEY_PATH="$(pwd)/AuthKey.p8"
          xcrun altool --upload-app \
            -f "${{ github.workspace }}/build/${PROJECT_NAME}.ipa" \
            -t ios \
            --apiKey "${{ secrets.API_KEY_ID }}" \
            --apiIssuer "${{ secrets.API_ISSUER_ID }}"

      # Шаг 8: Очистка временных файлов
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision